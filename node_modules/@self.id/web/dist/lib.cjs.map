{"version":3,"file":"lib.cjs","sources":["../src/client.ts","../src/self.ts"],"sourcesContent":["import { ThreeIdConnect } from '@3id/connect'\nimport type { EthereumAuthProvider } from '@3id/connect'\nimport type { ModelTypeAliases } from '@glazed/types'\nimport { Core } from '@self.id/core'\nimport type { CoreModelTypes, CoreParams } from '@self.id/core'\nimport { DID } from 'dids'\n\nexport type ConnectNetwork = 'dev-unstable' | 'mainnet' | 'testnet-clay'\n\nexport type WebClientParams<ModelTypes extends ModelTypeAliases = CoreModelTypes> =\n  CoreParams<ModelTypes> & { connectNetwork?: ConnectNetwork }\n\n/**\n * Extends {@linkcode core.Core}\n *\n * ```sh\n * import { WebClient } from '@self.id/web'\n * ```\n */\nexport class WebClient<\n  ModelTypes extends ModelTypeAliases = CoreModelTypes\n> extends Core<ModelTypes> {\n  #threeId: ThreeIdConnect\n\n  constructor(params: WebClientParams<ModelTypes>) {\n    super(params)\n    this.#threeId = new ThreeIdConnect(params.connectNetwork ?? params.ceramic)\n  }\n\n  get threeId(): ThreeIdConnect {\n    return this.#threeId\n  }\n\n  async authenticate(authProvider: EthereumAuthProvider, attachToCeramic = true): Promise<DID> {\n    const did = await this.connect(authProvider)\n    await did.authenticate()\n    if (attachToCeramic) {\n      this.ceramic.did = did\n    }\n    return did\n  }\n\n  async connect(authProvider: EthereumAuthProvider): Promise<DID> {\n    await this.#threeId.connect(authProvider)\n    return new DID({\n      provider: this.#threeId.getDidProvider(),\n      resolver: this.resolver,\n    })\n  }\n}\n","import type { EthereumAuthProvider } from '@3id/connect'\nimport type { StreamID } from '@ceramicnetwork/streamid'\nimport type { DefinitionContentType } from '@glazed/did-datastore'\nimport type { ModelTypeAliases } from '@glazed/types'\nimport type { CoreModelTypes } from '@self.id/core'\nimport type { DID } from 'dids'\n\nimport { WebClient } from './client'\nimport type { WebClientParams } from './client'\n\nexport type AuthenticateParams<ModelTypes extends ModelTypeAliases = CoreModelTypes> =\n  WebClientParams<ModelTypes> & { authProvider: EthereumAuthProvider }\n\nexport type SelfIDParams<ModelTypes extends ModelTypeAliases = CoreModelTypes> = {\n  client: WebClient<ModelTypes>\n}\n\n/**\n * ```sh\n * import { SelfID } from '@self.id/web'\n * ```\n */\nexport class SelfID<\n  ModelTypes extends ModelTypeAliases = CoreModelTypes,\n  Alias extends keyof ModelTypes['definitions'] = keyof ModelTypes['definitions']\n> {\n  static async authenticate<ModelTypes extends ModelTypeAliases = CoreModelTypes>(\n    params: AuthenticateParams<ModelTypes>\n  ): Promise<SelfID<ModelTypes>> {\n    const { authProvider, ...clientParams } = params\n    const client = new WebClient(clientParams)\n    await client.authenticate(authProvider, true)\n    return new SelfID({ client })\n  }\n\n  #client: WebClient<ModelTypes>\n\n  constructor(params: SelfIDParams<ModelTypes>) {\n    if (!params.client.ceramic.did?.authenticated) {\n      throw new Error(\n        'Input DID must be authenticated, use SelfID.authenticate() instead of new SelfID()'\n      )\n    }\n    this.#client = params.client\n  }\n\n  get client(): WebClient<ModelTypes> {\n    return this.#client\n  }\n\n  get did(): DID {\n    const did = this.#client.ceramic.did\n    if (did == null || !did.authenticated) {\n      throw new Error('Expected authenticated DID instance to be attached to Ceramic')\n    }\n    return did\n  }\n\n  get id(): string {\n    return this.did.id\n  }\n\n  // Definitions interactions\n\n  async get<Key extends Alias, ContentType = DefinitionContentType<ModelTypes, Key>>(\n    key: Key\n  ): Promise<ContentType | null> {\n    return await this.#client.dataStore.get(key as any, this.did.id)\n  }\n\n  async set<Key extends Alias, ContentType = DefinitionContentType<ModelTypes, Key>>(\n    key: Key,\n    content: ContentType\n  ): Promise<StreamID> {\n    return await this.#client.dataStore.set(key as any, content)\n  }\n\n  async merge<Key extends Alias, ContentType = DefinitionContentType<ModelTypes, Key>>(\n    key: Key,\n    content: ContentType\n  ): Promise<StreamID> {\n    return await this.#client.dataStore.merge(key as any, content)\n  }\n}\n"],"names":["__accessCheck","__privateGet","__privateAdd","__privateSet","Core","ThreeIdConnect","DID"],"mappings":"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"}