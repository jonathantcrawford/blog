{"version":3,"file":"lib.cjs","sources":["../src/__generated__/model.ts","../src/utils.ts","../src/core.ts","../src/public.ts"],"sourcesContent":["// This is a file generated by the publish-model.mjs script, do not edit manually\n\nimport type { CryptoAccountLinks } from '@datamodels/identity-accounts-crypto'\nimport type { AlsoKnownAs } from '@datamodels/identity-accounts-web'\nimport type { BasicProfile } from '@datamodels/identity-profile-basic'\nimport type { ModelTypeAliases, PublishedModel } from '@glazed/types'\n\nexport type ModelTypes = ModelTypeAliases<\n  {\n    AlsoKnownAs: AlsoKnownAs\n    BasicProfile: BasicProfile\n    CryptoAccounts: CryptoAccountLinks\n  },\n  {\n    alsoKnownAs: 'AlsoKnownAs'\n    basicProfile: 'BasicProfile'\n    cryptoAccounts: 'CryptoAccounts'\n  }\n>\n\nexport const model: PublishedModel<ModelTypes> = {\n  definitions: {\n    cryptoAccounts: 'kjzl6cwe1jw149z4rvwzi56mjjukafta30kojzktd9dsrgqdgz4wlnceu59f95f',\n    alsoKnownAs: 'kjzl6cwe1jw146zfmqa10a5x1vry6au3t362p44uttz4l0k4hi88o41zplhmxnf',\n    basicProfile: 'kjzl6cwe1jw145cjbeko9kil8g9bxszjhyde21ob8epxuxkaon1izyqsu8wgcic',\n  },\n  schemas: {\n    CryptoAccounts: 'ceramic://k3y52l7qbv1frypussjburqg4fykyyycfu0p9znc75lv2t5cg4xaslhagkd7h7mkg',\n    AlsoKnownAs: 'ceramic://k3y52l7qbv1fryojt8n8cw2k04p9wp67ly59iwqs65dejso566fij5wsdrb871yio',\n    BasicProfile: 'ceramic://k3y52l7qbv1frxt706gqfzmq6cbqdkptzk8uudaryhlkf6ly9vx21hqu4r6k1jqio',\n  },\n  tiles: {},\n}\n","import { AccountID } from 'caip'\n\nexport { isDIDstring } from '@glazed/did-datastore'\n\n/** @internal */\nexport function isCAIP10string(account: string): boolean {\n  try {\n    AccountID.parse(account)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n","import { getResolver as get3IDResolver } from '@ceramicnetwork/3id-did-resolver'\nimport { CeramicClient } from '@ceramicnetwork/http-client'\nimport { Caip10Link } from '@ceramicnetwork/stream-caip10-link'\nimport { DataModel } from '@glazed/datamodel'\nimport { DIDDataStore } from '@glazed/did-datastore'\nimport type { DefinitionContentType } from '@glazed/did-datastore'\nimport { TileLoader } from '@glazed/tile-loader'\nimport type { TileCache } from '@glazed/tile-loader'\nimport type { ModelTypeAliases, ModelTypesToAliases } from '@glazed/types'\nimport { Resolver } from 'did-resolver'\nimport { getResolver as getKeyResolver } from 'key-did-resolver'\n\nimport { model as coreModel } from './__generated__/model'\nimport type { CeramicNetwork, CoreModelTypes } from './types'\nimport { isCAIP10string } from './utils'\n\n/** @internal */\nexport const CERAMIC_URLS: Record<CeramicNetwork, string> = {\n  local: 'http://localhost:7007',\n  'mainnet-gateway': 'https://gateway.ceramic.network',\n  'testnet-clay': 'https://ceramic-clay.3boxlabs.com',\n  'testnet-clay-gateway': 'https://gateway-clay.ceramic.network',\n}\n\nexport type CoreParams<ModelTypes extends ModelTypeAliases = CoreModelTypes> = {\n  cache?: TileCache | boolean\n  ceramic: CeramicNetwork | string\n  loader?: TileLoader\n  model?: ModelTypesToAliases<ModelTypes>\n}\n\n/**\n * ```sh\n * import { Core } from '@self.id/core'\n * ```\n */\nexport class Core<\n  ModelTypes extends ModelTypeAliases = CoreModelTypes,\n  Alias extends keyof ModelTypes['definitions'] = keyof ModelTypes['definitions']\n> {\n  #ceramic: CeramicClient\n  #dataModel: DataModel<ModelTypes>\n  #dataStore: DIDDataStore<ModelTypes>\n  #resolver: Resolver\n  #tileLoader: TileLoader\n\n  constructor(params: CoreParams<ModelTypes>) {\n    const ceramic = new CeramicClient(\n      CERAMIC_URLS[params.ceramic as CeramicNetwork] ?? params.ceramic\n    )\n    const loader = params.loader ?? new TileLoader({ ceramic, cache: params.cache })\n\n    this.#ceramic = ceramic\n    this.#dataModel = new DataModel<ModelTypes>({\n      autopin: true,\n      loader,\n      model: params.model ?? (coreModel as ModelTypesToAliases<ModelTypes>),\n    })\n    this.#dataStore = new DIDDataStore<ModelTypes>({\n      autopin: true,\n      ceramic,\n      loader,\n      model: this.#dataModel,\n    })\n    this.#resolver = new Resolver({ ...getKeyResolver(), ...get3IDResolver(this.#ceramic) })\n    this.#tileLoader = loader\n  }\n\n  get ceramic(): CeramicClient {\n    return this.#ceramic\n  }\n\n  get dataModel(): DataModel<ModelTypes> {\n    return this.#dataModel\n  }\n\n  get dataStore(): DIDDataStore<ModelTypes> {\n    return this.#dataStore\n  }\n\n  get resolver(): Resolver {\n    return this.#resolver\n  }\n\n  get tileLoader(): TileLoader {\n    return this.#tileLoader\n  }\n\n  async getAccountDID(account: string): Promise<string> {\n    const link = await Caip10Link.fromAccount(this.#ceramic, account)\n    if (link.did == null) {\n      throw new Error(`No DID found for ${account}`)\n    }\n    return link.did\n  }\n\n  async toDID(accountOrDID: string): Promise<string> {\n    return isCAIP10string(accountOrDID) ? await this.getAccountDID(accountOrDID) : accountOrDID\n  }\n\n  async get<Key extends Alias, ContentType = DefinitionContentType<ModelTypes, Key>>(\n    key: Key,\n    id: string\n  ): Promise<ContentType | null> {\n    const did = await this.toDID(id)\n    return await this.#dataStore.get(key, did)\n  }\n}\n","import type { DefinitionContentType } from '@glazed/did-datastore'\nimport type { ModelTypeAliases } from '@glazed/types'\n\nimport type { ModelTypes as CoreModelTypes } from './__generated__/model'\nimport type { Core } from './core'\n\nexport type PublicIDParams<ModelTypes extends ModelTypeAliases = CoreModelTypes> = {\n  core: Core<ModelTypes>\n  id: string\n}\n\n/**\n * ```sh\n * import { PublicID } from '@self.id/core'\n * ```\n */\nexport class PublicID<\n  ModelTypes extends ModelTypeAliases = CoreModelTypes,\n  Alias extends keyof ModelTypes['definitions'] = keyof ModelTypes['definitions']\n> {\n  #core: Core<ModelTypes, Alias>\n  #id: string\n\n  constructor(params: PublicIDParams<ModelTypes>) {\n    this.#core = params.core\n    this.#id = params.id\n  }\n\n  get id(): string {\n    return this.#id\n  }\n\n  async get<Key extends Alias, ContentType = DefinitionContentType<ModelTypes, Key>>(\n    key: Key\n  ): Promise<ContentType | null> {\n    return await this.#core.dataStore.get(key, this.#id)\n  }\n}\n"],"names":["AccountID","__accessCheck","__privateGet","__privateAdd","__privateSet","CeramicClient","TileLoader","DataModel","coreModel","DIDDataStore","Resolver","getKeyResolver","get3IDResolver","Caip10Link"],"mappings":"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"}