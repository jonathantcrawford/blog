name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

defaults:
  run:
    shell: bash

jobs:
  #  lint:
  #    name: ⬣ ESLint
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: 🛑 Cancel Previous Runs
  #        uses: styfle/cancel-workflow-action@0.9.1
  #
  #      - name: ⬇️ Checkout repo
  #        uses: actions/checkout@v3
  #
  #      - name: ⎔ Setup node
  #        uses: actions/setup-node@v3
  #        with:
  #          node-version: 14
  #
  #      - name: 📥 Download deps
  #        uses: bahmutov/npm-install@v1
  #
  #      - name: 🔬 Lint
  #        run: npm run lint
  #
  #  typecheck:
  #    name: ʦ TypeScript
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: 🛑 Cancel Previous Runs
  #        uses: styfle/cancel-workflow-action@0.9.1
  #
  #      - name: ⬇️ Checkout repo
  #        uses: actions/checkout@v3
  #
  #      - name: ⎔ Setup node
  #        uses: actions/setup-node@v3
  #        with:
  #          node-version: 14
  #
  #      - name: 📥 Download deps
  #        uses: bahmutov/npm-install@v1
  #
  #      - name: 🔎 Type check
  #        run: npm run typecheck --if-present
  #
  #  vitest:
  #    name: ⚡ Vitest
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: 🛑 Cancel Previous Runs
  #        uses: styfle/cancel-workflow-action@0.9.1
  #
  #      - name: ⬇️ Checkout repo
  #        uses: actions/checkout@v3
  #
  #      - name: ⎔ Setup node
  #        uses: actions/setup-node@v3
  #        with:
  #          node-version: 14
  #
  #      - name: 📥 Download deps
  #        uses: bahmutov/npm-install@v1
  #
  #      - name: ⚡ Run vitest
  #        run: npm run test -- --coverage
  #
  #  cypress:
  #    name: ⚫️ Cypress
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: 🛑 Cancel Previous Runs
  #        uses: styfle/cancel-workflow-action@0.9.1
  #
  #      - name: ⬇️ Checkout repo
  #        uses: actions/checkout@v3
  #
  #      - name: 🏄 Copy test env vars
  #        run: cp .env.example .env
  #
  #      - name: ⎔ Setup node
  #        uses: actions/setup-node@v3
  #        with:
  #          node-version: 14
  #
  #      - name: 📥 Download deps
  #        uses: bahmutov/npm-install@v1
  #
  #      - name: 🏗 Build
  #        run: npm run build
  #
  #      - name: 🌳 Cypress run
  #        uses: cypress-io/github-action@v2
  #        with:
  #          start: npm run dev
  #          wait-on: "http://localhost:8811"
  #        env:
  #          PORT: "8811"

  deploy:
    #needs: [lint, typecheck, vitest, cypress]
    runs-on: ubuntu-latest

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14.19.1

      - name: 👀 Env
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Git ref:    ${{ github.ref }}"
          echo "GH actor:   ${{ github.actor }}"
          echo "SHA:        ${{ github.sha }}"
          VER=`node --version`; echo "Node ver:   $VER"
          VER=`npm --version`; echo "npm ver:    $VER"
          echo ${{ secrets.ARC_APP_SECRET }}

      - name: Make .env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_ARC_APP_SECRET: ${{ secrets.ARC_APP_SECRET }}
          envkey_SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          envkey_NODE_ENV: ${{ secrets.NODE_ENV }}
          directory: ./
          file_name: .env
          fail_on_empty: false

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          install-command: yarn

      - name: 🏗 Build Packages
        run: yarn build

      - name: 🛠 Install Arc
        run: yarn global add @architect/architect

      - name: 🚀 Staging Deploy
        if: github.ref == 'refs/heads/dev'
        run: arc deploy --staging --prune
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 🚀 Production Deploy
        if: github.ref == 'refs/heads/main'
        run: arc deploy --production --prune
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
